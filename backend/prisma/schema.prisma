generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  isAdmin   Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  exercises Exercise[]
  sessions  Session[]
  programs  Program[]

  userExerciseSessions UserExerciseSession[]
  followedProgram      FollowedProgram?
  createdMuscles       Muscle[] @relation("MuscleCreator")
}

model Muscle {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())

  createdBy   User   @relation("MuscleCreator", fields: [createdById], references: [id])
  createdById Int

  exercises   Exercise[] @relation("ExerciseMuscles")
}

model Exercise {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  author      User?     @relation(fields: [authorId], references: [id])
  authorId    Int?

  muscles     Muscle[]  @relation("ExerciseMuscles")
  sessions    Session[] @relation("SessionExercises")

  userExerciseSessions UserExerciseSession[]
}

model Session {
  id          Int        @id @default(autoincrement())
  name        String
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  author      User?      @relation(fields: [authorId], references: [id])
  authorId    Int?

  exercises   Exercise[] @relation("SessionExercises")
  programs    Program[]  @relation("ProgramSessions")

  userExerciseSessions UserExerciseSession[]
}

model Program {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  author      User?      @relation(fields: [authorId], references: [id])
  authorId    Int?

  sessions    Session[]  @relation("ProgramSessions")
  followedBy  FollowedProgram[]
}

model UserExerciseSession {
  id         Int      @id @default(autoincrement())

  user       User     @relation(fields: [userId], references: [id])
  userId     Int

  session    Session  @relation(fields: [sessionId], references: [id])
  sessionId  Int

  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int

  sets       Int
  reps       Int

  @@unique([userId, sessionId, exerciseId])
}

model FollowedProgram {
  id         Int     @id @default(autoincrement())
  user       User    @relation(fields: [userId], references: [id])
  userId     Int     @unique
  program    Program @relation(fields: [programId], references: [id])
  programId  Int
}
